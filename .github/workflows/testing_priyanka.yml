name: Check Integration Stagegate

on:
  workflow_dispatch:
    inputs:
      integrationConfig:
        description: 'Integration configuration (JSON: tool, env, etc.)'
        type: string
        required: false
        default: '{"integrationTestTool":"cucumber","module":"gs-api","testEnv":"dev","namespace":"latam","endpoint":"https://example.com","project":"projectX","env":"dev","country":"Latam"}'

      deployConfig:
        description: 'Deployment configuration (JSON: cluster, flags, Maven POM, etc.)'
        type: string
        required: false
        default: '{"deployOnly":false,"restartOnly":false,"isDrProd":false,"isHotfixBranch":false,"cr_number":"null","clusterSuffix":"01-aks","ImageTag":"","MavenPomFile":"gs-api/pom.xml"}'

jobs:
  check-last-pipeline-run:
    runs-on: ubuntu-latest
    outputs:
      trigger_pipeline: ${{ steps.check.outputs.trigger_pipeline }}
    steps:
      - name: Parse JSON Inputs
        id: parse
        shell: pwsh
        run: |
          $integration = ConvertFrom-Json '${{ inputs.integrationConfig }}'
          $deploy = ConvertFrom-Json '${{ inputs.deployConfig }}'

          Write-Host "ðŸ”¹ Integration Tool: $($integration.integrationTestTool)"
          Write-Host "ðŸ”¹ Maven POM File: $($deploy.MavenPomFile)"
          Write-Host "ðŸ”¹ Cluster Suffix: $($deploy.clusterSuffix)"

          echo "MAVEN_POM_FILE=$($deploy.MavenPomFile)" >> $env:GITHUB_ENV

      - name: Check Last Run of Maven Test Pipeline
        id: check
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        shell: pwsh
        run: |
          $owner = "${{ github.repository_owner }}"
          $repo = "${{ github.event.repository.name }}"
          $workflowName = "maven-test-pipeline.yml"

          Write-Host "ðŸ”¹ Checking last completed run for $workflowName in $owner/$repo"

          $api = "https://api.github.com/repos/$owner/$repo/actions/workflows/$workflowName/runs?status=completed&per_page=1"
          $headers = @{ Authorization = "token $env:GH_TOKEN" }
          $response = Invoke-RestMethod -Uri $api -Headers $headers

          if (-not $response.workflow_runs -or $response.workflow_runs.Count -eq 0) {
              Write-Host " No previous runs found. Will trigger pipeline."
              echo "trigger_pipeline=true" >> $env:GITHUB_OUTPUT
              exit 0
          }

          $lastRun = $response.workflow_runs[0]
          $lastRunTimeUTC = [DateTime]::Parse($lastRun.updated_at).ToUniversalTime()
          $currentTimeUTC = [DateTime]::UtcNow
          $hoursSince = ($currentTimeUTC - $lastRunTimeUTC).TotalHours

          Write-Host " Last run ended at $($lastRunTimeUTC.ToString('yyyy-MM-dd HH:mm:ss')) UTC"
          Write-Host "  Hours since last run: $([math]::Round($hoursSince,2))"

          if ($hoursSince -le 24) {
              Write-Host " Last Maven Test Pipeline ran within 24 hours. Reuse results."
              echo "trigger_pipeline=false" >> $env:GITHUB_OUTPUT
          } else {
              Write-Host " Last run is older than 24 hours. Trigger new pipeline."
              echo "trigger_pipeline=true" >> $env:GITHUB_OUTPUT

  invoke-tests:
    needs: check-last-pipeline-run
    if: ${{ needs.check-last-pipeline-run.outputs.trigger_pipeline == 'true' }}
    uses: 3-Tier-GitOps-CD/.github/workflows/triggerregression.yml@main
    with:
      mavenPomFile: pom.xml

  validate-results:
    needs: [check-last-pipeline-run, invoke-tests]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download Cucumber Artifacts
        uses: actions/download-artifact@v4
        with:
          name: CucumberReports
          path: ${{ github.workspace }}/artifact

      - name: Parse and Validate Cucumber Results
        run: |
          echo "Running validation script..."
          bash gs-api/scripts/report-parser.sh
        env:
          ARTIFACT_DIRECTORY: ${{ github.workspace }}/artifact
          ENV: '-Dspring.profiles.active=dev -Dspring.country.code=Latam'
          TAGS: '-Dcucumber.filter.tags="@globalsonew and @latam"'
